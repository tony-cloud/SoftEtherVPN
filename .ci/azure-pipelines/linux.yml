jobs:
- job: Ubuntu_x64
  pool:
    vmImage: ubuntu-18.04
  steps:
  - checkout: self
    submodules: true
    persistCredentials: true
  - script: sudo apt update && sudo apt-get -y install cmake gcc g++ ninja-build libncurses5-dev libreadline-dev libsodium-dev libssl-dev make zlib1g-dev liblz4-dev
    displayName: 'Prepare environment'
  - script: "$(Build.SourcesDirectory)/.ci/azure-pipelines/linux_build.sh"
    env:
      SE_BUILD_NUMBER_TOKEN: $(BUILD_NUMBER_TOKEN)
    displayName: 'Build'
  - script: |
      .ci/appveyor-deb-install-test.sh
      sudo apt-get -y install autoconf libtool liblzo2-dev libpam-dev fping unzip # To build OpenVPN
      sudo BUILD_BINARIESDIRECTORY=$BUILD_BINARIESDIRECTORY .ci/start-se-openvpn.sh
      sudo BUILD_BINARIESDIRECTORY=$BUILD_BINARIESDIRECTORY .ci/run-openvpn-tests.sh
    displayName: 'Test'
  - script: |
      sudo chmod 0777 -R $BUILD_BINARIESDIRECTORY
    displayName: 'Set permission'
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.BinariesDirectory)'
      contents: '?(vpnserver|vpnclient|vpncmd|vpntest|vpnbridge|*.se2|*.so)'
      TargetFolder: '$(Build.StagingDirectory)/binaries'
      flattenFolders: false
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.BinariesDirectory)'
      contents: '?(*.deb)'
      TargetFolder: '$(Build.StagingDirectory)/packages'
      flattenFolders: false
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.StagingDirectory)/binaries'
      artifactName: 'Binaries-linux-Ubuntu-x64'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.StagingDirectory)/packages'
      artifactName: 'Installers'
